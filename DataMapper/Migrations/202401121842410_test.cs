// <copyright file="202401121842410_test.cs" company="Transilvania University Of Brasov">
// Dragomir Razvan
// </copyright>
// <auto-generated/>

namespace DataMapper.Migrations
{
    using System;
    using System.Data.Entity.Migrations;

    /// <summary>
    /// Migration
    /// </summary>
    /// <seealso cref="System.Data.Entity.Migrations.DbMigration" />
    /// <seealso cref="System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata" />
    public partial class test : DbMigration
    {
        /// <inheritdoc/>
        public override void Up()
        {
            this.DropForeignKey("dbo.Editions", "Book_BookId", "dbo.Books");
            this.DropForeignKey("dbo.Borrows", "Edition_EditionId", "dbo.Editions");
            this.DropForeignKey("dbo.ExtendedBorrows", "Borrow_Id", "dbo.Borrows");
            DropForeignKey("dbo.Borrows", "Reader_ReaderId", "dbo.Readers");
            this.DropIndex("dbo.Editions", new[] { "Book_BookId" });
            this.DropIndex("dbo.Borrows", new[] { "Edition_EditionId" });
            this.DropIndex("dbo.Borrows", new[] { "Reader_ReaderId" });
            this.DropIndex("dbo.ExtendedBorrows", new[] { "Borrow_Id" });
            this.RenameColumn(table: "dbo.BookDomains", name: "BookDomain_BookDomainId", newName: "ParentDomain_BookDomainId");
            this.RenameIndex(table: "dbo.BookDomains", name: "IX_BookDomain_BookDomainId", newName: "IX_ParentDomain_BookDomainId");
            this.AddColumn("dbo.Authors", "FirstName", c => c.String(nullable: false, maxLength: 50));
            this.AddColumn("dbo.Authors", "LastName", c => c.String(nullable: false, maxLength: 50));
            this.AddColumn("dbo.Students", "FirstName", c => c.String(nullable: false, maxLength: 50));
            this.AddColumn("dbo.Students", "LastName", c => c.String(nullable: false, maxLength: 50));
            this.AddColumn("dbo.Students", "Age", c => c.Int(nullable: false));
            this.AlterColumn("dbo.Books", "Title", c => c.String(nullable: false, maxLength: 50));
            this.AlterColumn("dbo.BookDomains", "DomainName", c => c.String(nullable: false, maxLength: 50));
            this.AlterColumn("dbo.Editions", "EditionName", c => c.String(nullable: false, maxLength: 50));
            this.AlterColumn("dbo.Editions", "Book_BookId", c => c.Int(nullable: false));
            this.AlterColumn("dbo.Borrows", "Edition_EditionId", c => c.Int(nullable: false));
            this.AlterColumn("dbo.Borrows", "Reader_ReaderId", c => c.Int(nullable: false));
            this.AlterColumn("dbo.ExtendedBorrows", "Borrow_Id", c => c.Int(nullable: false));
            this.AlterColumn("dbo.Readers", "ReaderFirstName", c => c.String(nullable: false, maxLength: 50));
            this.AlterColumn("dbo.Readers", "ReaderLastName", c => c.String(nullable: false, maxLength: 50));
            this.AlterColumn("dbo.Readers", "Address", c => c.String(nullable: false));
            this.CreateIndex("dbo.Editions", "Book_BookId");
            this.CreateIndex("dbo.Borrows", "Edition_EditionId");
            this.CreateIndex("dbo.Borrows", "Reader_ReaderId");
            this.CreateIndex("dbo.ExtendedBorrows", "Borrow_Id");
            this.AddForeignKey("dbo.Editions", "Book_BookId", "dbo.Books", "BookId", cascadeDelete: true);
            this.AddForeignKey("dbo.Borrows", "Edition_EditionId", "dbo.Editions", "EditionId", cascadeDelete: true);
            this.AddForeignKey("dbo.ExtendedBorrows", "Borrow_Id", "dbo.Borrows", "Id", cascadeDelete: true);
            this.AddForeignKey("dbo.Borrows", "Reader_ReaderId", "dbo.Readers", "ReaderId", cascadeDelete: true);
            this.DropColumn("dbo.Authors", "Name");
            this.DropColumn("dbo.Students", "Name");
        }

        /// <inheritdoc/>
        public override void Down()
        {
            this.AddColumn("dbo.Students", "Name", c => c.String());
            this.AddColumn("dbo.Authors", "Name", c => c.String());
            this.DropForeignKey("dbo.Borrows", "Reader_ReaderId", "dbo.Readers");
            this.DropForeignKey("dbo.ExtendedBorrows", "Borrow_Id", "dbo.Borrows");
            this.DropForeignKey("dbo.Borrows", "Edition_EditionId", "dbo.Editions");
            this.DropForeignKey("dbo.Editions", "Book_BookId", "dbo.Books");
            this.DropIndex("dbo.ExtendedBorrows", new[] { "Borrow_Id" });
            this.DropIndex("dbo.Borrows", new[] { "Reader_ReaderId" });
            this.DropIndex("dbo.Borrows", new[] { "Edition_EditionId" });
            this.DropIndex("dbo.Editions", new[] { "Book_BookId" });
            this.AlterColumn("dbo.Readers", "Address", c => c.String());
            this.AlterColumn("dbo.Readers", "ReaderLastName", c => c.String());
            this.AlterColumn("dbo.Readers", "ReaderFirstName", c => c.String());
            this.AlterColumn("dbo.ExtendedBorrows", "Borrow_Id", c => c.Int());
            this.AlterColumn("dbo.Borrows", "Reader_ReaderId", c => c.Int());
            this.AlterColumn("dbo.Borrows", "Edition_EditionId", c => c.Int());
            this.AlterColumn("dbo.Editions", "Book_BookId", c => c.Int());
            this.AlterColumn("dbo.Editions", "EditionName", c => c.String());
            this.AlterColumn("dbo.BookDomains", "DomainName", c => c.String());
            this.AlterColumn("dbo.Books", "Title", c => c.String());
            this.DropColumn("dbo.Students", "Age");
            this.DropColumn("dbo.Students", "LastName");
            this.DropColumn("dbo.Students", "FirstName");
            this.DropColumn("dbo.Authors", "LastName");
            this.DropColumn("dbo.Authors", "FirstName");
            this.RenameIndex(table: "dbo.BookDomains", name: "IX_ParentDomain_BookDomainId", newName: "IX_BookDomain_BookDomainId");
            this.RenameColumn(table: "dbo.BookDomains", name: "ParentDomain_BookDomainId", newName: "BookDomain_BookDomainId");
            this.CreateIndex("dbo.ExtendedBorrows", "Borrow_Id");
            this.CreateIndex("dbo.Borrows", "Reader_ReaderId");
            this.CreateIndex("dbo.Borrows", "Edition_EditionId");
            this.CreateIndex("dbo.Editions", "Book_BookId");
            this.AddForeignKey("dbo.Borrows", "Reader_ReaderId", "dbo.Readers", "ReaderId");
            this.AddForeignKey("dbo.ExtendedBorrows", "Borrow_Id", "dbo.Borrows", "Id");
            this.AddForeignKey("dbo.Borrows", "Edition_EditionId", "dbo.Editions", "EditionId");
            this.AddForeignKey("dbo.Editions", "Book_BookId", "dbo.Books", "BookId");
        }
    }
}
